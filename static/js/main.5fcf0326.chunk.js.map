{"version":3,"sources":["screens/WelcomeScreen.jsx","commons/constants.js","components/StatusPanel.jsx","components/Square.jsx","components/ChessBoard.jsx","components/GoalPanel.jsx","components/Countdown.jsx","screens/GameScreen.jsx","screens/GameOverScreen.jsx","components/GameManager.jsx","App.js","index.js"],"names":["WelcomeScreen","startGame","className","onClick","BOARD_RANKS","BOARD_FILES","GAME_STATE","SUCCESS_EMOJI","type","FAIL_EMOJI","StatusPanel","squareClickTarget","squareClickState","scrollingPanelRef","useRef","useEffect","current","scrollIntoView","behavior","block","ref","map","_","i","Square","notation","axis","onSquareClick","id","e","target","ChessBoard","generateSquareId","squareId","length","Array","fileNotation","rankNotation","renderBothNotations","SQUARES_PER_BOARD","renderFileNotation","renderRankNotation","keys","slice","includes","SQUARES_PER_EDGE","GoalPanel","nextTarget","Countdown","countdown","timeOut","useState","timer","setTimer","setTimeout","GameScreen","handleGameLoop","handleTimeOut","GameOverScreen","score","correct","total","GameManager","setSquareClickTarget","setSquareClickState","gameState","setGameState","generateTargetSquare","Math","floor","random","targetSquare","setTargetSquare","noteSquareClick","handleGameStart","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fcf0326.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WelcomeScreen = ({ startGame }) => {\r\n  const startCountdown = () => {\r\n    startGame();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"screen-wrapper\">\r\n        <h1 className=\"headline\">chess-coords-trainer</h1>\r\n        <p className=\"cta\">Hit correct coordinates as many times as you can.</p>\r\n        <p className=\"cta\">You have 30 seconds.</p>\r\n        <button className=\"start-button\" onClick={() => startCountdown()}>\r\n          lets do this!\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WelcomeScreen;\r\n","const BOARD_RANKS = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\r\nconst BOARD_FILES = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\n\r\nconst GAME_DURATION = 30;\r\nconst GAME_STATE = {\r\n  welcome: \"WELCOME\",\r\n  playing: \"PLAYING\",\r\n  gameOver: \"GAME_OVER\",\r\n};\r\n\r\nconst SQUARES_PER_EDGE = 8;\r\nconst SQUARES_PER_BOARD = 64;\r\n\r\nconst SUCCESS_EMOJI = <span type=\"img\">✅</span>;\r\nconst FAIL_EMOJI = <span type=\"img\">❌</span>;\r\n\r\nexport {\r\n  BOARD_RANKS,\r\n  BOARD_FILES,\r\n  GAME_DURATION,\r\n  GAME_STATE,\r\n  SQUARES_PER_EDGE,\r\n  SQUARES_PER_BOARD,\r\n  SUCCESS_EMOJI,\r\n  FAIL_EMOJI,\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { SUCCESS_EMOJI, FAIL_EMOJI } from \"../commons/constants\";\r\n\r\nconst StatusPanel = ({ squareClickTarget, squareClickState }) => {\r\n  const scrollingPanelRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollingPanelRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"status-panel flex\">\r\n      <div ref={scrollingPanelRef}>\r\n        {squareClickTarget.map((_, i) =>\r\n          squareClickState[i] ? (\r\n            <div key={i}>\r\n              <span>{squareClickTarget[i]}</span>\r\n              {SUCCESS_EMOJI}\r\n            </div>\r\n          ) : (\r\n            <div key={i}>\r\n              <span>{squareClickTarget[i]}</span>\r\n              {FAIL_EMOJI}\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusPanel;\r\n","import React from \"react\";\r\n\r\nconst Square = ({ notation, axis, onSquareClick, id }) => {\r\n  return (\r\n    <div\r\n      className=\"square flex\"\r\n      id={id}\r\n      onClick={(e) => onSquareClick(e.target.id)}\r\n    >\r\n      {axis === \"A1\" ? (\r\n        <>\r\n          <span className={\"rank\"}>{notation[0]}</span>\r\n          <span className={\"file\"}>{notation[1]}</span>\r\n        </>\r\n      ) : (\r\n        <span className={axis}>{notation}</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\n\r\nimport Square from \"./Square\";\r\nimport {\r\n  BOARD_FILES,\r\n  BOARD_RANKS,\r\n  SQUARES_PER_EDGE,\r\n  SQUARES_PER_BOARD,\r\n} from \"../commons/constants\";\r\n\r\nconst ChessBoard = ({ onSquareClick }) => {\r\n  const generateSquareId = (i) => {\r\n    let squareId;\r\n\r\n    // TODO:  row handling sucks\r\n    if (i < SQUARES_PER_EDGE) {\r\n      squareId = BOARD_RANKS[i] + BOARD_FILES[BOARD_FILES.length - 1];\r\n    } else if (i < 2 * SQUARES_PER_EDGE) {\r\n      squareId =\r\n        BOARD_RANKS[i % SQUARES_PER_EDGE] + BOARD_FILES[BOARD_FILES.length - 2];\r\n    } else if (i < 3 * SQUARES_PER_EDGE) {\r\n      squareId =\r\n        BOARD_RANKS[i % SQUARES_PER_EDGE] + BOARD_FILES[BOARD_FILES.length - 3];\r\n    } else if (i < 4 * SQUARES_PER_EDGE) {\r\n      squareId =\r\n        BOARD_RANKS[i % SQUARES_PER_EDGE] + BOARD_FILES[BOARD_FILES.length - 4];\r\n    } else if (i < 5 * SQUARES_PER_EDGE) {\r\n      squareId =\r\n        BOARD_RANKS[i % SQUARES_PER_EDGE] + BOARD_FILES[BOARD_FILES.length - 5];\r\n    } else if (i < 6 * SQUARES_PER_EDGE) {\r\n      squareId =\r\n        BOARD_RANKS[i % SQUARES_PER_EDGE] + BOARD_FILES[BOARD_FILES.length - 6];\r\n    } else if (i < 7 * SQUARES_PER_EDGE) {\r\n      squareId =\r\n        BOARD_RANKS[i % SQUARES_PER_EDGE] + BOARD_FILES[BOARD_FILES.length - 7];\r\n    } else if (i < 8 * SQUARES_PER_EDGE) {\r\n      squareId =\r\n        BOARD_RANKS[i % SQUARES_PER_EDGE] + BOARD_FILES[BOARD_FILES.length - 8];\r\n    }\r\n\r\n    return squareId;\r\n  };\r\n\r\n  const renderSquares = () =>\r\n    [...Array(64)].map((_, i) => {\r\n      let fileNotation = \"\";\r\n      let rankNotation = \"\";\r\n\r\n      const renderBothNotations = i === SQUARES_PER_BOARD - SQUARES_PER_EDGE;\r\n      const renderFileNotation = i === 0 || i % SQUARES_PER_EDGE === 0;\r\n      // TODO: why this slice works\r\n      const renderRankNotation = [...Array(SQUARES_PER_BOARD).keys()]\r\n        .slice(BOARD_RANKS.length - SQUARES_PER_EDGE)\r\n        .includes(i);\r\n\r\n      if (renderBothNotations) {\r\n        fileNotation = \"1\";\r\n        rankNotation = \"A\";\r\n        return (\r\n          <Square\r\n            id={generateSquareId(i)}\r\n            key={i + 1}\r\n            notation={[rankNotation, fileNotation]}\r\n            axis={\"A1\"}\r\n            onSquareClick={onSquareClick}\r\n          />\r\n        );\r\n      }\r\n\r\n      if (renderFileNotation) {\r\n        fileNotation =\r\n          BOARD_FILES[BOARD_FILES.length - 1 - i / SQUARES_PER_EDGE];\r\n        return (\r\n          <Square\r\n            id={generateSquareId(i)}\r\n            key={i + 1}\r\n            notation={fileNotation}\r\n            axis={\"file\"}\r\n            onSquareClick={onSquareClick}\r\n          />\r\n        );\r\n      }\r\n\r\n      if (renderRankNotation) {\r\n        rankNotation = BOARD_RANKS[SQUARES_PER_EDGE - SQUARES_PER_BOARD + i];\r\n        return (\r\n          <Square\r\n            id={generateSquareId(i)}\r\n            key={i + 1}\r\n            notation={rankNotation}\r\n            axis={\"rank\"}\r\n            onSquareClick={onSquareClick}\r\n          />\r\n        );\r\n      }\r\n\r\n      return null;\r\n    });\r\n\r\n  return (\r\n    <div className=\"board-coords-wrapper flex\">\r\n      <div className=\"chess-board flex\">{renderSquares()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessBoard;\r\n","import React from \"react\";\r\n\r\nconst GoalPanel = ({ nextTarget }) => {\r\n  return (\r\n    <div className=\"goal-panel \">\r\n      <p>{nextTarget}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Countdown = ({ countdown, timeOut }) => {\r\n  const [timer, setTimer] = useState(countdown);\r\n\r\n  // TODO: cleanup timeout\r\n  useEffect(() => {\r\n    if (timer > 0) setTimeout(() => setTimer(timer - 1), 1000);\r\n    if (timer === 0) timeOut();\r\n  }, [timer, timeOut]);\r\n\r\n  return <div className=\"countdown\">{timer}</div>;\r\n};\r\n\r\nexport default Countdown;\r\n","import React from \"react\";\r\n\r\nimport { GAME_DURATION } from \"../commons/constants\";\r\nimport StatusPanel from \"../components/StatusPanel\";\r\nimport ChessBoard from \"../components/ChessBoard\";\r\nimport GoalPanel from \"../components/GoalPanel\";\r\nimport Countdown from \"../components/Countdown\";\r\n\r\nconst GameScreen = ({\r\n  squareClickState,\r\n  squareClickTarget,\r\n  handleGameLoop,\r\n  nextTarget,\r\n  handleTimeOut,\r\n}) => (\r\n  <>\r\n    <StatusPanel\r\n      className=\"flex\"\r\n      squareClickState={squareClickState}\r\n      squareClickTarget={squareClickTarget}\r\n    />\r\n    <ChessBoard onSquareClick={handleGameLoop} />\r\n    <GoalPanel className=\"flex\" nextTarget={nextTarget} />\r\n    <Countdown countdown={GAME_DURATION} timeOut={handleTimeOut} />\r\n  </>\r\n);\r\n\r\nexport default GameScreen;\r\n","import React from \"react\";\r\nimport { GAME_DURATION } from \"../commons/constants\";\r\n\r\nconst GameOverScreen = ({ score, startGame }) => {\r\n  return (\r\n    <>\r\n      <div className=\"screen-wrapper\">\r\n        <h1 className=\"headline\">awesome</h1>\r\n        <p className=\"cta\">\r\n          You did <strong>{score.correct}</strong> correct out of{\" \"}\r\n          <strong>{score.total}</strong> total hits\r\n        </p>\r\n        <p className=\"cta\">\r\n          in <strong>{GAME_DURATION}</strong> seconds!\r\n        </p>\r\n        <button className=\"start-button\" onClick={() => startGame()}>\r\n          restart!\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameOverScreen;\r\n","import React, { useState } from \"react\";\r\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\r\nimport GameScreen from \"../screens/GameScreen\";\r\nimport GameOverScreen from \"../screens/GameOverScreen\";\r\n\r\nimport { BOARD_FILES, BOARD_RANKS, GAME_STATE } from \"../commons/constants\";\r\n\r\nconst GameManager = () => {\r\n  const [squareClickTarget, setSquareClickTarget] = useState([]);\r\n  const [squareClickState, setSquareClickState] = useState([]);\r\n  const [gameState, setGameState] = useState(GAME_STATE.welcome);\r\n\r\n  const generateTargetSquare = () => {\r\n    const randomRank =\r\n      BOARD_RANKS[Math.floor(Math.random() * BOARD_RANKS.length)];\r\n\r\n    const randomFile =\r\n      BOARD_FILES[Math.floor(Math.random() * BOARD_FILES.length)];\r\n\r\n    return randomRank + randomFile;\r\n  };\r\n\r\n  const [targetSquare, setTargetSquare] = useState(generateTargetSquare());\r\n\r\n  const handleGameLoop = (id) => {\r\n    noteSquareClick(id);\r\n    setTargetSquare(generateTargetSquare());\r\n  };\r\n\r\n  const noteSquareClick = (id) => {\r\n    setSquareClickTarget([...squareClickTarget, id]);\r\n    setSquareClickState([...squareClickState, id === targetSquare]);\r\n  };\r\n\r\n  const handleGameStart = () => {\r\n    setSquareClickTarget([]);\r\n    setSquareClickState([]);\r\n    setGameState(GAME_STATE.playing);\r\n  };\r\n\r\n  const handleTimeOut = () => {\r\n    setGameState(GAME_STATE.gameOver);\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    return {\r\n      total: squareClickState.length,\r\n      correct: squareClickState.filter((e) => e !== false).length,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-manager flex\">\r\n      {gameState === GAME_STATE.welcome && (\r\n        <WelcomeScreen startGame={handleGameStart} />\r\n      )}\r\n      {gameState === GAME_STATE.playing && (\r\n        <GameScreen\r\n          className=\"flex\"\r\n          squareClickState={squareClickState}\r\n          squareClickTarget={squareClickTarget}\r\n          handleGameLoop={handleGameLoop}\r\n          nextTarget={targetSquare}\r\n          handleTimeOut={handleTimeOut}\r\n        />\r\n      )}\r\n      {gameState === GAME_STATE.gameOver && (\r\n        <GameOverScreen score={calculateScore()} startGame={handleGameStart} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameManager;\r\n","import React from \"react\";\r\nimport GameManager from \"./components/GameManager\";\r\nimport \"./App.css\";\r\n\r\n// TODO:\r\n// => add game start preloader\r\n// => store high score in localStorage\r\n// => return feedback on current score based on high score\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App flex\">\r\n      <GameManager />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}